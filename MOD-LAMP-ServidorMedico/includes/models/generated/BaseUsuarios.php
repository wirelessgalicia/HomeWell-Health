<?php
/*
 * This file is part of HomeWell-Health
 *
 * Copyright (C) 2011-2012 WirelessGalicia S.L.
 *
 * The contents of this file are subject to the Mozilla Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific language governing rights and limitations
 * under the License.
 * 
 */

/**
 * BaseUsuarios
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_medico
 * @property string $nombre
 * @property string $apellidos
 * @property string $alias
 * @property string $usuario
 * @property string $clave
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsuarios extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('usuarios');
        $this->hasColumn('id_medico', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('apellidos', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('alias', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('usuario', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('clave', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
    }

    public function setUp()
    {
        parent::setUp();
        $madebybehavior0 = new MadeByBehavior();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($madebybehavior0);
        $this->actAs($softdelete0);
        $this->actAs($timestampable0);
    }
}
